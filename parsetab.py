
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNnonassocLESSGREATEREQUALG_EQUALL_EQUALleftXORleftANDleftINVleftPLUSMINUSleftTIMESDIVIDErightUMINUSINT IF THEN ELSE END NUMBER ID UMINUS XOR AND INV PLUS MINUS TIMES DIVIDE LPAREN RPAREN LS_PAREN RS_PAREN LF_PAREN RF_PAREN COMMA SEMIC EQUAL GREATER LESS G_EQUAL L_EQUAL ASSIGN RETURNsentence : statement SEMIC sentence\n                | emptystatement    : statement_b\n                    | statement_opstatement_b  : IF iexpression THEN iblock END\n                    | IF iexpression THEN iblock ELSE eblock ENDstatement_op : wordiexpression : expressioniblock : istat SEMIC iblock\n              | emptyistat : statement_b\n             | iwordiword : ID ASSIGN expression\n            | INT IDeblock : estat SEMIC eblock\n              | emptyestat : statement_b\n             | ewordeword : ID ASSIGN expression\n            | INT IDword : ID ASSIGN expression\n            | INT IDexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression AND term\n                  | expression XOR term\n                  | INV term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBER\n              | LPAREN expression RPAREN \n              | IDempty :'
    
_lr_action_items = {'$end':([0,1,3,10,21,],[-35,0,-2,-35,-1,]),'IF':([0,10,22,47,48,61,],[6,6,6,6,6,6,]),'ID':([0,6,9,10,14,17,19,22,23,24,25,26,27,28,38,47,48,49,57,61,62,],[8,18,20,8,18,18,18,37,18,18,18,18,18,18,50,56,37,18,63,56,18,]),'INT':([0,10,22,47,48,61,],[9,9,38,57,38,57,]),'SEMIC':([2,4,5,7,13,15,16,18,20,29,31,33,35,36,39,40,41,42,43,44,45,46,50,52,54,55,59,60,63,65,],[10,-3,-4,-7,-28,-31,-32,-34,-22,-27,-21,48,-11,-12,-23,-24,-25,-26,-29,-30,-33,-5,-14,61,-17,-18,-13,-6,-20,-19,]),'INV':([6,17,19,49,62,],[14,14,14,14,14,]),'NUMBER':([6,14,17,19,23,24,25,26,27,28,49,62,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'LPAREN':([6,14,17,19,23,24,25,26,27,28,49,62,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'ASSIGN':([8,37,56,],[19,49,62,]),'THEN':([11,12,13,15,16,18,29,39,40,41,42,43,44,45,],[22,-8,-28,-31,-32,-34,-27,-23,-24,-25,-26,-29,-30,-33,]),'PLUS':([12,13,15,16,18,29,30,31,39,40,41,42,43,44,45,59,65,],[23,-28,-31,-32,-34,-27,23,23,-23,-24,-25,-26,-29,-30,-33,23,23,]),'MINUS':([12,13,15,16,18,29,30,31,39,40,41,42,43,44,45,59,65,],[24,-28,-31,-32,-34,-27,24,24,-23,-24,-25,-26,-29,-30,-33,24,24,]),'AND':([12,13,15,16,18,29,30,31,39,40,41,42,43,44,45,59,65,],[25,-28,-31,-32,-34,-27,25,25,-23,-24,-25,-26,-29,-30,-33,25,25,]),'XOR':([12,13,15,16,18,29,30,31,39,40,41,42,43,44,45,59,65,],[26,-28,-31,-32,-34,-27,26,26,-23,-24,-25,-26,-29,-30,-33,26,26,]),'RPAREN':([13,15,16,18,29,30,39,40,41,42,43,44,45,],[-28,-31,-32,-34,-27,45,-23,-24,-25,-26,-29,-30,-33,]),'TIMES':([13,15,16,18,29,39,40,41,42,43,44,45,],[27,-31,-32,-34,27,27,27,27,27,-29,-30,-33,]),'DIVIDE':([13,15,16,18,29,39,40,41,42,43,44,45,],[28,-31,-32,-34,28,28,28,28,28,-29,-30,-33,]),'END':([22,32,34,47,48,51,53,58,61,64,],[-35,46,-10,-35,-35,60,-16,-9,-35,-15,]),'ELSE':([22,32,34,48,58,],[-35,47,-10,-35,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentence':([0,10,],[1,21,]),'statement':([0,10,],[2,2,]),'empty':([0,10,22,47,48,61,],[3,3,34,53,34,53,]),'statement_b':([0,10,22,47,48,61,],[4,4,35,54,35,54,]),'statement_op':([0,10,],[5,5,]),'word':([0,10,],[7,7,]),'iexpression':([6,],[11,]),'expression':([6,17,19,49,62,],[12,30,31,59,65,]),'term':([6,14,17,19,23,24,25,26,49,62,],[13,29,13,13,39,40,41,42,13,13,]),'factor':([6,14,17,19,23,24,25,26,27,28,49,62,],[15,15,15,15,15,15,15,15,43,44,15,15,]),'iblock':([22,48,],[32,58,]),'istat':([22,48,],[33,33,]),'iword':([22,48,],[36,36,]),'eblock':([47,61,],[51,64,]),'estat':([47,61,],[52,52,]),'eword':([47,61,],[55,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentence","S'",1,None,None,None),
  ('sentence -> statement SEMIC sentence','sentence',3,'p_sentence','yaccTest.py',276),
  ('sentence -> empty','sentence',1,'p_sentence','yaccTest.py',277),
  ('statement -> statement_b','statement',1,'p_statement','yaccTest.py',282),
  ('statement -> statement_op','statement',1,'p_statement','yaccTest.py',283),
  ('statement_b -> IF iexpression THEN iblock END','statement_b',5,'p_statement_b','yaccTest.py',288),
  ('statement_b -> IF iexpression THEN iblock ELSE eblock END','statement_b',7,'p_statement_b','yaccTest.py',289),
  ('statement_op -> word','statement_op',1,'p_statement_op','yaccTest.py',303),
  ('iexpression -> expression','iexpression',1,'p_iexpression','yaccTest.py',308),
  ('iblock -> istat SEMIC iblock','iblock',3,'p_iblock','yaccTest.py',321),
  ('iblock -> empty','iblock',1,'p_iblock','yaccTest.py',322),
  ('istat -> statement_b','istat',1,'p_istat','yaccTest.py',327),
  ('istat -> iword','istat',1,'p_istat','yaccTest.py',328),
  ('iword -> ID ASSIGN expression','iword',3,'p_iword','yaccTest.py',337),
  ('iword -> INT ID','iword',2,'p_iword','yaccTest.py',338),
  ('eblock -> estat SEMIC eblock','eblock',3,'p_eblock','yaccTest.py',346),
  ('eblock -> empty','eblock',1,'p_eblock','yaccTest.py',347),
  ('estat -> statement_b','estat',1,'p_estat','yaccTest.py',352),
  ('estat -> eword','estat',1,'p_estat','yaccTest.py',353),
  ('eword -> ID ASSIGN expression','eword',3,'p_eword','yaccTest.py',358),
  ('eword -> INT ID','eword',2,'p_eword','yaccTest.py',359),
  ('word -> ID ASSIGN expression','word',3,'p_word','yaccTest.py',364),
  ('word -> INT ID','word',2,'p_word','yaccTest.py',365),
  ('expression -> expression PLUS term','expression',3,'p_expression','yaccTest.py',403),
  ('expression -> expression MINUS term','expression',3,'p_expression','yaccTest.py',404),
  ('expression -> expression AND term','expression',3,'p_expression','yaccTest.py',405),
  ('expression -> expression XOR term','expression',3,'p_expression','yaccTest.py',406),
  ('expression -> INV term','expression',2,'p_expression','yaccTest.py',407),
  ('expression -> term','expression',1,'p_expression','yaccTest.py',408),
  ('term -> term TIMES factor','term',3,'p_term','yaccTest.py',540),
  ('term -> term DIVIDE factor','term',3,'p_term','yaccTest.py',541),
  ('term -> factor','term',1,'p_term','yaccTest.py',542),
  ('factor -> NUMBER','factor',1,'p_factor','yaccTest.py',552),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','yaccTest.py',553),
  ('factor -> ID','factor',1,'p_factor','yaccTest.py',554),
  ('empty -> <empty>','empty',0,'p_empty','yaccTest.py',562),
]
